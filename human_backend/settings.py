"""
Django settings for human_backend project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-udjbmxe!rw=pj57l42#e_bk47+9_o-(f$5yr%)*r5o=3zg_%i0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
  'localhost'
]


AUTH_USER_MODEL = 'users.User'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'users',
    'auths',
    'missions',
    'notifications',
    'common'
]

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient'
        }
    }
}

# 配置 DRF 預設的身份驗證類型為 JWT
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    # 設定api訪問權限
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'  # 需要用戶登錄
    ]
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),  # 可選，設置 refresh token 的有效期
    'ROTATE_REFRESH_TOKENS': False,  # 可選，是否在每次登錄時旋轉 refresh token
    'BLACKLIST_AFTER_ROTATION': False,  # 可選，是否在刷新 token 後將舊的 token 加入黑名單
}

CORS_ALLOWED_ORIGINS = [
    'http://localhost'  # 允許的前端域
]

# 如果需要攜帶憑證 (Cookies 或身份驗證)，需要設置
CORS_ALLOW_CREDENTIALS = True

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     # 訊息模板
#     'formatters': {
#       'verbose': {
#         'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
#         'style': '{'
#       },
#       'simple': {
#         'format': '{levelname} {asctime} {message}',
#         'style': '{'
#       }
#     },
#     # 決定訊息要用甚麼方式做紀錄
#     'handlers': {
#       'verbose': {
#         'level': 'DEBUG',
#         'class': 'logging.StreamHandler',
#         'formatter': 'verbose'
#       },
#       'simple': {
#           'level': 'INFO',
#           'class': 'logging.StreamHandler',
#           'formatter': 'simple',
#       },
#       'file':{
#           'level': 'INFO',
#           'class': 'logging.FileHandler',
#           'filename': 'log',
#           'formatter':'verbose'
#       }
#     },
#     'loggers': {
#       'main-logger': {
#         'handlers': ['verbose', 'file'],
#         'level':'DEBUG',
#         'propagate':True
#       }
#     },
#     'filters': {
#         # TODO
#     },
# } 

MIDDLEWARE = [
  'corsheaders.middleware.CorsMiddleware',
  'django.middleware.security.SecurityMiddleware',
  'django.contrib.sessions.middleware.SessionMiddleware',
  'django.middleware.common.CommonMiddleware',
  'django.middleware.csrf.CsrfViewMiddleware',
  'django.contrib.auth.middleware.AuthenticationMiddleware',
  'django.contrib.messages.middleware.MessageMiddleware',
  'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'human_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'human_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.postgresql',
		'NAME': 'postgres',
		'USER': 'postgres',
		'PASSWORD': '',
		'HOST': 'localhost',
		'PORT': '5432'
	}
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
